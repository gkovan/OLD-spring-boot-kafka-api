spring:
  application:
    name: "${IMAGE_NAME:template-spring-boot}"

hello:
  pattern: "Hello there, %s!"

greetingservice:
  beanName: "hola"
  
kafka-orders:
  ordersTopicName: orders
  kafkaAcknowledge: "1"
  kafkaProducerIdempotence: false
  kafkaConsumerGroupid: orders-consumer-group
  kafkaBrokers: "localhost:9092"

kafka-word-count:
  commonProperties:
    bootstrapServers: ${BOOTSTRAP_SERVERS:localhost:9092}
    securityProtocol: SASL_SSL
    saslMechanism: PLAIN
    username: ${USERNAME:token}
    apiKey: ${API_KEY:}
    sslProtocol: TLSv1.2
    sslEnabledProtocols: TLSv1.2
    sslEndpointIdentificationAlgorithm: HTTPS
    truststoreEnabled: ${TRUSTSTORE_ENABLED:false}
    sslTruststoreLocation: ${TRUSTSTORE_LOCATION:}
    sslTruststorePassword: ${TRUSTSTORE_PASSWORD:}

  producerProperties:
    topic: ${PRODUCER_TOPIC:streams-wordcount-plaintext-input}
    acks: ${ACKS:1}
    enableIdempotence: ${ENABLE_IDEMPOTENCE:false}
    clientId: ${CLIENT_ID:OrderEventsAgent}

  consumerProperties:
    groupId: ${GROUP_ID:order-ms-consumer-grp}

swagger:
  baseApiPackage:
  - "com.ibm.hello"
  - "com.ibm.health"
  title: "${IMAGE_NAME:template-spring-boot}"
  description: "Description"
  version: "1.0.0"
  termsOfServiceUrl: ""

  license: "MIT"
  licenseUrl: ""

management:
  endpoints:
    web:
      base-path: "/metrics"
      exposure:
        include: "*"

server:
  port: ${PORT:9080}

logging:
  level:
    ROOT: ${LOG_LEVEL:INFO}
    com.ibm.hello: DEBUG
    com.ibm.cloud_garage: DEBUG
    org.springframework: ERROR
    org.springframework.web: WARN
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
    ch.qos.logback.classic: ERROR
  pattern:
    console: "%d{YYYY-dd-MM HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %X{X-B3-TraceId:-} ${spring.application.name} %logger{39}.%M %L - %msg%n"
